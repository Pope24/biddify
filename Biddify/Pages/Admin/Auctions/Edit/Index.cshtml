@page "{id}"
@model Biddify.Pages.Admin.Auctions.Edit.IndexModel
@using Domain.Enums
@{
    ViewData["Title"] = "Edit Auction";
    Layout = "_AdminLayout";
}

@section Styles {
    <link rel="stylesheet" href="~/css/create-auction.css" />
}

<div class="max-w-4xl mx-auto py-6">
    <div class="flex items-center justify-between mb-6">
        <h1 class="text-2xl font-bold text-gray-800">Edit Auction</h1>
        <a asp-page="/Admin/Auctions/Detail/Index" asp-route-id="@Model.Input.Id" class="text-gray-600 hover:text-gray-800 flex items-center gap-2">
            <i data-lucide="arrow-left" class="w-5 h-5"></i>
            Back to Details
        </a>
    </div>

    <form method="post" enctype="multipart/form-data" class="bg-white rounded-xl shadow-sm border p-8 space-y-8">
        <input type="hidden" asp-for="Input.Id" />
        <div asp-validation-summary="ModelOnly" class="text-red-500 text-sm mb-4 bg-red-50 p-4 rounded-lg"></div>

        <!-- Images Section -->
        <div class="col-span-2 space-y-4">
            <label class="form-label">Product Images</label>
            
            <!-- Existing Images -->
            @if (Model.Input.ExistingImageUrls?.Any() == true)
            {
                <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4">
                    @foreach (var imageUrl in Model.Input.ExistingImageUrls)
                    {
                        <div class="relative group">
                            <img src="@imageUrl" alt="Product image" class="w-full h-32 object-cover rounded-lg border" />
                            <div class="absolute inset-0 bg-black bg-opacity-40 opacity-0 group-hover:opacity-100 transition-opacity duration-200 rounded-lg flex items-center justify-center">
                                <button type="button" 
                                        onclick="deleteImage(this, '@imageUrl')"
                                        class="text-white bg-red-600 p-2 rounded-full hover:bg-red-700 transition-colors duration-200">
                                    <i data-lucide="trash-2" class="w-4 h-4"></i>
                                </button>
                            </div>
                            <input type="hidden" name="Input.ExistingImageUrls" value="@imageUrl" />
                        </div>
                    }
                </div>
            }

            <!-- Upload New Images -->
            <div class="mt-4">
                <div class="flex items-center justify-center w-full">
                    <label for="newImages" class="flex flex-col items-center justify-center w-full h-32 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100">
                        <div class="flex flex-col items-center justify-center pt-5 pb-6">
                            <i data-lucide="upload-cloud" class="w-8 h-8 mb-3 text-gray-400"></i>
                            <p class="mb-2 text-sm text-gray-500"><span class="font-semibold">Click to upload</span> or drag and drop</p>
                            <p class="text-xs text-gray-500">PNG, JPG or JPEG (MAX. 5MB each)</p>
                        </div>
                        <input id="newImages" 
                               name="NewImages" 
                               type="file" 
                               class="hidden" 
                               multiple 
                               accept=".png,.jpg,.jpeg"
                               onchange="previewImages(this)" />
                    </label>
                </div>
                <div id="imagePreviewContainer" class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4 mt-4"></div>
            </div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
            <!-- Title -->
            <div class="col-span-2">
                <label asp-for="Input.Title" class="form-label">Title</label>
                <input asp-for="Input.Title" class="form-input" required />
                <span asp-validation-for="Input.Title" class="text-red-500 text-sm mt-1 block"></span>
            </div>

            <!-- Description -->
            <div class="col-span-2">
                <label asp-for="Input.Description" class="form-label">Description</label>
                <textarea asp-for="Input.Description" rows="4" class="form-textarea" required></textarea>
                <span asp-validation-for="Input.Description" class="text-red-500 text-sm mt-1 block"></span>
            </div>

            <!-- Category -->
            <div>
                <label asp-for="Input.CategoryProduct" class="form-label">Category</label>
                <select asp-for="Input.CategoryProduct" asp-items="Html.GetEnumSelectList<ECategoryProduct>()" class="form-select" required></select>
                <span asp-validation-for="Input.CategoryProduct" class="text-red-500 text-sm mt-1 block"></span>
            </div>
            
            <!-- Status -->
            <div>
                <label asp-for="Input.Status" class="form-label">Status</label>
                <select asp-for="Input.Status" asp-items="Html.GetEnumSelectList<EAuctionStatus>()" class="form-select" required></select>
                <span asp-validation-for="Input.Status" class="text-red-500 text-sm mt-1 block"></span>
            </div>

            <!-- Start Price -->
            <div>
                <label asp-for="Input.StartPrice" class="form-label">Start Price ($)</label>
                <input asp-for="Input.StartPrice" type="number" step="0.01" min="0" class="form-input" required />
                <span asp-validation-for="Input.StartPrice" class="text-red-500 text-sm mt-1 block"></span>
            </div>

            <!-- Min Bid Price -->
            <div>
                <label asp-for="Input.MinBidPrice" class="form-label">Minimum Bid Amount ($)</label>
                <input asp-for="Input.MinBidPrice" type="number" step="0.01" min="0" class="form-input" required />
                <span asp-validation-for="Input.MinBidPrice" class="text-red-500 text-sm mt-1 block"></span>
            </div>

            <!-- Start Time -->
            <div>
                <label asp-for="Input.StartTime" class="form-label">Start Time</label>
                <input asp-for="Input.StartTime" type="datetime-local" class="form-input" required />
                <span asp-validation-for="Input.StartTime" class="text-red-500 text-sm mt-1 block"></span>
            </div>

            <!-- End Time -->
            <div>
                <label asp-for="Input.EndTime" class="form-label">End Time</label>
                <input asp-for="Input.EndTime" type="datetime-local" class="form-input" required />
                <span asp-validation-for="Input.EndTime" class="text-red-500 text-sm mt-1 block"></span>
            </div>
        </div>

        <div class="flex justify-end space-x-4 pt-6 border-t">
            <a asp-page="/Admin/Auctions/Detail/Index" asp-route-id="@Model.Input.Id"
               class="px-6 py-2.5 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50">
                Cancel
            </a>
            <button type="submit" 
                    class="px-6 py-2.5 text-sm font-medium text-white bg-blue-600 rounded-lg hover:bg-blue-700">
                Save Changes
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <script src="https://unpkg.com/lucide@latest"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            lucide.createIcons();
        });

        // Preview images before upload
        function previewImages(input) {
            const container = document.getElementById('imagePreviewContainer');
            container.innerHTML = '';

            if (input.files) {
                Array.from(input.files).forEach(file => {
                    if (file.size > 5 * 1024 * 1024) {
                        alert('File ' + file.name + ' is too large. Maximum size is 5MB.');
                        return;
                    }

                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const div = document.createElement('div');
                        div.className = 'relative group';
                        div.innerHTML = `
                            <img src="${e.target.result}" class="w-full h-32 object-cover rounded-lg border" />
                            <div class="absolute inset-0 bg-black bg-opacity-40 opacity-0 group-hover:opacity-100 transition-opacity duration-200 rounded-lg flex items-center justify-center">
                                <button type="button" onclick="removePreview(this)" class="text-white bg-red-600 p-2 rounded-full hover:bg-red-700 transition-colors duration-200">
                                    <i data-lucide="x" class="w-4 h-4"></i>
                                </button>
                            </div>
                        `;
                        container.appendChild(div);
                        lucide.createIcons();
                    }
                    reader.readAsDataURL(file);
                });
            }
        }

        // Remove preview image
        function removePreview(button) {
            button.closest('.relative').remove();
        }

        // Delete existing image
        function deleteImage(button, imageUrl) {
            if (confirm('Are you sure you want to delete this image?')) {
                button.closest('.relative').remove();
            }
        }
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
} 